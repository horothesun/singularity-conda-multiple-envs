name: Image build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: # enable manual execution

jobs:
  build:
    runs-on: ubuntu-20.04

    env:
      SINGULARITY_VERSION: 3.7.2
      RECIPE_FILENAME: singularity-image.def
      IMAGE_FILENAME: image.sif

    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.8.0
      with:
        access_token: ${{ github.token }}

    - uses: actions/checkout@v2

    - name: Install expect
      run: |
        sudo apt-get install expect
        which expect

    - uses: eWaterCycle/setup-singularity@v6
      with:
        singularity-version: ${{ env.SINGULARITY_VERSION }}

    - name: Singularity info
      run: |
        singularity --version

    - name: Singularity keys search
      run: |
        singularity keys search -l horothesun@gmail.com

    - name: Set Singularity Cloud token
      run: |
        mkdir -p ~/.singularity/
        echo ${{ secrets.SINGULARITY_CLOUD_TOKEN }} > ~/.singularity/sylabs-token
        ls -lah ~/.singularity
        wc ~/.singularity/sylabs-token

    - name: Set Singularity PGP secret
      run: |
        mkdir -p ~/.singularity/sypgp/
        chmod 700 ~/.singularity/sypgp/
        printf "$SINGULARITY_PGP_SECRET_BASE64" | base64 --decode > ~/.singularity/sypgp/pgp-secret
        chmod 600 ~/.singularity/sypgp/pgp-secret
        ls -lah ~/.singularity/sypgp
        wc ~/.singularity/sypgp/pgp-secret
      env:
        SINGULARITY_PGP_SECRET_BASE64: ${{ secrets.SINGULARITY_PGP_SECRET_BASE64 }}

    - name: Build image
      run: |
        singularity build --fakeroot $IMAGE_FILENAME $RECIPE_FILENAME

    - name: Image info
      run: |
        ls -lah $IMAGE_FILENAME
        echo "---"
        singularity inspect $IMAGE_FILENAME
        echo "---"
        singularity inspect --deffile $IMAGE_FILENAME

    - name: Sign image
      run: |
        ./non_interactive_image_sign.sh
      env:
        IMAGE_FILENAME: ${{ env.IMAGE_FILENAME }}
        SINGULARITY_PGP_PASSPHRASE: ${{ secrets.SINGULARITY_PGP_PASSPHRASE }}

    - name: Verify image
      run: |
        singularity verify $IMAGE_FILENAME

    - name: Run image
      run: |
        singularity run $IMAGE_FILENAME

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: image
        path: ${{ env.IMAGE_FILENAME }}
        if-no-files-found: error
