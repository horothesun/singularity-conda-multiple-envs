name: Image build and push

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-20.04

    env:
      SINGULARITY_VERSION: 3.7.2
      RECIPE_FILENAME: singularity-image.def
      IMAGE_FILENAME: image.sif
      TOKEN_FILE_PATH: ~/.singularity/sylabs-token

    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.8.0
      with:
        access_token: ${{ github.token }}

    - uses: actions/checkout@v2

    - name: Install expect
      run: |
        sudo apt-get install expect
        which expect

    - uses: eWaterCycle/setup-singularity@v6
      with:
        singularity-version: ${{ env.SINGULARITY_VERSION }}

    - name: Singularity info
      run: |
        singularity --version

    - name: Build image
      run: |
        singularity build --fakeroot $IMAGE_FILENAME $RECIPE_FILENAME

    - name: Image info
      run: |
        ls -lah $IMAGE_FILENAME
        echo "---"
        singularity inspect $IMAGE_FILENAME
        echo "---"
        singularity inspect --deffile $IMAGE_FILENAME

    - name: Set Singularity PGP secret
      run: |
        mkdir -p ~/.singularity/sypgp/
        chmod 700 ~/.singularity/sypgp/
        printf "$SINGULARITY_PGP_SECRET_BASE64" | base64 --decode > ~/.singularity/sypgp/pgp-secret
        chmod 600 ~/.singularity/sypgp/pgp-secret
        ls -lah ~/.singularity/sypgp
      env:
        SINGULARITY_PGP_SECRET_BASE64: ${{ secrets.SINGULARITY_PGP_SECRET_BASE64 }}

    - name: Sign image
      run: |
        ./non_interactive_image_sign.sh
      env:
        IMAGE_FILENAME: ${{ env.IMAGE_FILENAME }}
        SINGULARITY_PGP_PASSPHRASE: ${{ secrets.SINGULARITY_PGP_PASSPHRASE }}

    - name: Verify image
      run: |
        singularity verify $IMAGE_FILENAME

    - name: Run image
      run: |
        singularity run $IMAGE_FILENAME

    # - name: Upload artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: image
    #     path: ${{ env.IMAGE_FILENAME }}
    #     if-no-files-found: error

    - name: Set Singularity Cloud token
      run: |
        mkdir -p ~/.singularity/
        echo "$SINGULARITY_CLOUD_TOKEN" > $TOKEN_FILE_PATH
        ls -lah ~/.singularity
      env:
        SINGULARITY_CLOUD_TOKEN: ${{ secrets.SINGULARITY_CLOUD_TOKEN }}

    - name: Singularity login
      run: |
        singularity remote login --tokenfile $TOKEN_FILE_PATH $REMOTE_NAME
      env:
        REMOTE_NAME: SylabsCloud

    - name: Push image
      run: |
        GITHUB_TAG=${GITHUB_REF#refs/tags/}
        echo "GITHUB_TAG: $GITHUB_TAG"
        singularity push --description $IMAGE_DESCRIPTION \
          $IMAGE_FILENAME library://$USER/$COLLECTION/$CONTAINER:$GITHUB_TAG
      env:
        USER: horothesun
        COLLECTION: default
        CONTAINER: singularity-conda-multiple-envs
        IMAGE_DESCRIPTION: Singularity containerization of a Conda-based multi-environment bash script.
